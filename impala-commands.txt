~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Impala Commands
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

$impala-shell     -- connects to the impala shell.
$impala-shell -i localhost
$impala-shell -i host:port

----------------------------------------------------------
			Common Commands
----------------------------------------------------------

[localhost.localdomain:21000] > help;

[localhost.localdomain:21000] > version;

The profile command displays the low-level information about the recent query

[localhost.localdomain:21000] > profile;


----------------------------------------------------------
		Database Specific Statements
----------------------------------------------------------

===> CREATE DATABASE IF NOT EXISTS database_name;

===> SHOW databases;

In order to create a database in HDFS file system, you need to specify the location where the database is to be created.

===> CREATE DATABASE IF NOT EXISTS database_name LOCATION hdfs_path;

===> DROP DATABASE IF EXISTS sample_database;

Using cascade, you can delete this database directly along with its tables.

===> DROP DATABASE sample_database CASCADE;

===> USE db_name;

----------------------------------------------------------
		Table Specific Statements
----------------------------------------------------------
===> SHOW tables;

===> DESCRIBE employee;


===> create table employee (id INT, name STRING, age INT, address STRING, salary BIGINT);

===> ALTER TABLE customers RENAME TO users;

===> ALTER TABLE users ADD COLUMNS (account_no BIGINT, phone_no BIGINT);
===> ALTER TABLE users DROP account_no;

===> ALTER TABLE name CHANGE column_name new_name new_type
===> ALTER TABLE users CHANGE phone_no e_mail string;

===> DROP TABLES if exists student;

===> insert into employee (id, name, age) VALUES (1, 'Ramesh', 32 );
===> insert into employee values (2, 'Khilan', 25, 'Delhi', 15000 );
===> insert overwrite employee values (1, 'Ram', 26, 'Vishakhapatnam', 37000 )



===> TRUNCATE customers;    // all the records will be deleted

----------------------------------------------------------
		VIEWS
----------------------------------------------------------

===> CREATE VIEW IF NOT EXISTS customers_view AS select name, age from customers;

===> ALTER VIEW customers_view as select id, name, salary from customers;

===> DROP VIEW customers_view;

----------------------------------------------------------
		Select Statements
----------------------------------------------------------

===> SELECT * FROM customers;
===> SELECT id, name, age FROM customers;

===> SELECT * FROM customers ORDER BY id ASC;

===> SELECT name, SUM(salary) FROM customers GROUP BY name;
===> SELECT max(salary) FROM customers GROUP BY age HAVING MAX(salary) > 20000;

===> SELECT * FROM customers ORDER BY id LIMIT 4;
===> SELECT * FROM customers ORDER BY id LIMIT 4 offset 5

===> SELECT DISTINCT name, age, address FROM customers;

NOTE: Both names should have compatable schemas

===> SELECT * FROM customers ORDER BY id LIMIT 3 
     UNION
     SELECT * FROM employee ORDER BY id LIMIT 3;

===> WITH t1 AS (SELECT * FROM customers WHERE age > 25), 
	  t2 AS (SELECT * FROM employee WHERE age > 25) 
     (SELECT * FROM t1 UNION SELECT * FROM t2);







